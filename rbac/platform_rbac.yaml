---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 3Gi
  logVolumeCapacity: 3Gi

---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 5Gi
  tls:
    secretRef: tls-kafka
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\\s]?=[\\s]?([a-zA-Z0-9.]*)?.*/$1/
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  authorization:
    type: rbac
    superUsers:
    - User:rahul
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.confluent.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: credential
          configurations:
            groupNameAttribute: cn
            groupObjectClass: groupofNames
            groupMemberAttribute: member
            groupMemberAttributePattern: cn=(.*?),ou=(.*?),ou=users,dc=example,dc=com
            groupSearchBase: ou=groups,dc=example,dc=com
            userNameAttribute: cn
            userObjectClass: person
            userSearchBase: ou=users,dc=example,dc=com
            userSearchScope: 2
  configOverrides:
    server:
      - "ldap.search.mode=GROUPS"
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1" 
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
#  metricReporter:
#    enabled: true
#    bootstrapEndpoint: kafka:9071
#    authentication:
#      type: mtls
#    tls:
#      enabled: true
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2181
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  tls:
    secretRef: tls-connect
  authorization:
    type: rbac
  configOverrides:
    server: 
      - config.storage.replication.factor=1
      - offset.storage.replication.factor=1
      - status.storage.replication.factor=1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: connect-mds-client
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 3Gi
  tls:
    secretRef: tls-controlcenter
  authorization:
    type: rbac
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.contorlcenter.replication.factor=1 
      - confluent.metrics.reporter.topic.replicas=1 
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: c3-mds-client
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
    connect:
    - name: connect
      url: https://connect.confluent.svc.cluster.local:8083
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  tls:
    secretRef: tls-schema
  authorization:
    type: rbac
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: sr-mds-client
      tls:
        enabled: true

---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-credential