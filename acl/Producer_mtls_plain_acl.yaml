#apiVersion: v1
#kind: Secret
#metadata:
#  name: kafka-client-config
#  namespace: confluent
#type: Opaque
#data:
#  kafka.properties: Ym9vdHN0cmFwLnNlcnZlcnM9a2Fma2EtMC5rYWZrYS5jb25mbHVlbnQuc3ZjLmNsdXN0ZXIubG9jYWw6OTA5MgpzZWN1cml0eS5wcm90b2NvbD1TQVNMX1BMQUlOVEVYVApzYXNsLmphYXMuY29uZmlnPW9yZy5hcGFjaGUua2Fma2EuY29tbW9uLnNlY3VyaXR5LnBsYWluLlBsYWluTG9naW5Nb2R1bGUgcmVxdWlyZWQgXAogICB1c2VybmFtZT0iYWRtaW4iIFwKICAgcGFzc3dvcmQ9ImFkbWluLXNlY3JldCI7CnNhc2wubWVjaGFuaXNtPVBMQUlOCg==
#
#---
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: producer
  namespace: confluent
spec: 
  template:
    metadata:
      name: producer
      labels:
        app: produce
    spec:
      containers:
      - name: acl
        image: confluentinc/cp-kafka:latest
        securityContext:
          runAsUser: 0
          privileged: true
        command: ["/bin/sh","-c"]
        args:
          - |
            kafka-acls --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092 \
            --topic role \
            --command-config /mnt/client.properties \
            --add \
            --deny-principal User:'admin' \
            --operation Write; \
            kafka-acls --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092 \
            --topic role \
            --command-config /mnt/client.properties \
            --force --remove \
            --allow-principal User:'admin' \
            --operation Read --operation Write ; \
            kafka-acls --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092 \
            --topic role \
            --command-config /mnt/client.properties \
            --add \
            --deny-principal User:'admin' \
            --operation Read; \
            kafka-producer-perf-test \
            --topic role  \
            --record-size 524288 \
            --throughput 64 \
            --producer.config /mnt/client.properties \
            --num-records 100; \
            kafka-consumer-perf-test --bootstrap-server kafka-0.kafka.confluent.svc.cluster.local:9092 \
            --topic role  \
            --consumer.config /mnt/client.properties \
            --messages 100
#        command: ["/bin/bash","-c", "chmod +x /scripts/Producer.sh && /scripts/Producer.sh"]
#        command: ["/bin/sh","-c", "sleep infinity"]
        volumeMounts:
        - name: client-properties-volume
          mountPath: /mnt/client.properties
          subPath: client.properties
        - name: kafka-acls-script-volume
          mountPath: /scripts/Producer.sh
          subPath: Producer.sh
#        - name: kafka-properties
#          mountPath: /mnt
#        - name: kafka-ssl-autogenerated
#          mountPath: /mnt/sslcerts
          #command: ["/bin/sh","-c"]
          #args: ["sleep infinity"]
#      - name: init-sleep
#        image: busybox
#        command: [ "sleep", "1h" ]
      volumes:
      - name: client-properties-volume
        configMap:
          name: client-properties
          items:
            - key: "client.properties"
              path: "client.properties"
      - name: kafka-acls-script-volume
        configMap:
          name: kafka-acls-script
          items:
            - key: "Producer.sh"
              path: "Producer.sh"
#      - name: kafka-properties
#        secret:
#          secretName: kafka-client-config
#      - name: kafka-ssl-autogenerated
#        secret:
#          secretName: kafka-generated-jks
  replicas: 1
  selector: 
    matchLabels:
      app: produce

---
apiVersion: v1
kind: Service
metadata:
  name: producer
spec: 
  clusterIP: None

---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata: 
  name: role
  namespace: confluent
spec:
  name: role
  replicas: 1
  partitionCount: 1
  configs:
    cleanup.policy: "delete"
